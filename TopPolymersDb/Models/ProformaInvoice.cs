//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TopPolymersDb.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class ProformaInvoice : IValidatableObject
    {

        public int Id { get; set; }

        [Required(ErrorMessage = "Serial No is required")]
        [Display(Name = "SL NO")]
        public Nullable<long> SL_No { get; set; }

        [Required(ErrorMessage = " Proforma Invoice is required")]
        [Display(Name = "PI NO.")]
        public string PI_No { get; set; }

        [Required(ErrorMessage = " Proforma Invoice Date is required")]
        [Display(Name = "PI Date")]
        public DateTime PI_Date { get; set; }

        public Nullable<int> CustomerId { get; set; }

        [Required(ErrorMessage = " Proforma Invoice Value is required")]
        [Display(Name = "PI Value")]
        [DataType(DataType.Currency)]
        public Nullable<decimal> PI_Value { get; set; }

        public Nullable<int> LC_Id { get; set; }

        [Required(ErrorMessage = "Price is required")]
        public Nullable<decimal> Price { get; set; }

        [Display(Name = "Currency Type")]
        public Nullable<int> CurrencyId { get; set; }

        [Required(ErrorMessage = "Quantity is required")]
        public Nullable<decimal> Quantity { get; set; }

        [Display(Name = "Unit Type")]
        public Nullable<int> UnitId { get; set; }

       // [DataType(DataType.Date)]
        public DateTime ETD { get; set; }

       // [DataType(DataType.Date)]
        public DateTime ETA { get; set; }

        public Nullable<int> PT_Id { get; set; }

        public string Remarks { get; set; }

        public virtual Currency Currency { get; set; }
        public virtual CustomerInfo CustomerInfo { get; set; }
        public virtual LCNo LCNo { get; set; }
        public virtual PaymentTerm PaymentTerm { get; set; }
        public virtual Unite Unite { get; set; }




        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            List<ValidationResult> res = new List<ValidationResult>();
            if (ETA < ETD)
            {
                ValidationResult mss = new ValidationResult("ETD date must be greater than or equal to ETA");
                res.Add(mss);
            }
            return res;
        }
    }
}
